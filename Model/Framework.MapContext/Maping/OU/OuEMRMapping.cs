using ELinq.Mapping.Fluent;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using Orm.Model.Model;

namespace Orm.MapContext.Maping
{
    public class OuEMRMapping : ClassMap<OuEMR>
    {
        public OuEMRMapping()
        {
            this.TableName("OuEMR").Schema("orm");
            this.Column(p => p.GUID).ColumnName("GUID");
            this.Column(p => p.GuarderName).ColumnName("GUARDERNAME");
            this.Column(p => p.GuarderAddress).ColumnName("GUARDERADDRESS");
            this.Column(p => p.GuarderPhone).ColumnName("GuarderName");
            this.Column(p => p.HeartRate).ColumnName("HEARTRATE");
            this.Column(p => p.HomeRemarks).ColumnName("HOMEREMARKS");
            this.Column(p => p.HowRemark).ColumnName("HOWREMARK");
            this.Column(p => p.ID).ColumnName("ID");
            this.Column(p => p.IdCardNo).ColumnName("IDCARDNO");
            this.Column(p => p.IfGoodRemark).ColumnName("IFGOODREMARK");
            this.Column(p => p.IsAuthed).ColumnName("ISAUTHED");
            this.Column(p => p.IsCAddress).ColumnName("ISCADDRESS");
            this.Column(p => p.IsCTime).ColumnName("ISCTIME");
            this.Column(p => p.IsDefy).ColumnName("ISDEFY");
            this.Column(p => p.IsDFSW).ColumnName("ISDFSW");
            this.Column(p => p.IsFight).ColumnName("ISFIGHT");
            this.Column(p => p.IsForceAction).ColumnName("ISFORCEACTION");
            this.Column(p => p.IsHappy).ColumnName("ISHAPPY");
            this.Column(p => p.IsImitate).ColumnName("ISIMITATE");
            this.Column(p => p.IsIncrease).ColumnName("ISINCREASE");
            this.Column(p => p.IsKB).ColumnName("ISKB");
            this.Column(p => p.IsKBAction).ColumnName("ISKBACTION");
            this.Column(p => p.IsMj).ColumnName("ISMJ");
           // this.Column(p => p.IsModify).ColumnName("");
            this.Column(p => p.IsMySelf).ColumnName("ISMYSELF");
            this.Column(p => p.IsPerson).ColumnName("ISPERSON");
            this.Column(p => p.IsReduce).ColumnName("ISREDUCE");
            this.Column(p => p.IsRepeat).ColumnName("ISREPEAT");
            this.Column(p => p.IsSilence).ColumnName("ISSILENCE");
            this.Column(p => p.IsStrange).ColumnName("ISSTRANGE");
            this.Column(p => p.IsZs).ColumnName("ISZS");
            this.Column(p => p.IsZY).ColumnName("ISZY");
            this.Column(p => p.LastRemark).ColumnName("LASTREMARK");
            this.Column(p => p.LsApperance).ColumnName("LSAPPERANCE");
            this.Column(p => p.LsAttention).ColumnName("LSATTENTION");
            this.Column(p => p.LsBeforeFactor).ColumnName("LSBEFOREFACTOR");
            this.Column(p => p.LsBehaviour).ColumnName("LSBEHAVIOUR");
            this.Column(p => p.LsBreathSound).ColumnName("LSBREATHSOUND");
            this.Column(p => p.LsEating).ColumnName("LSEATING");
            this.Column(p => p.LsEmotion).ColumnName("LSEMOTION");
            this.Column(p => p.LsFeeling).ColumnName("LSFEELING");
            this.Column(p => p.LsForce).ColumnName("LSFORCE");
            this.Column(p => p.LsHeartRhythm).ColumnName("LSHEARTRHYTHM");
            this.Column(p => p.LsHomeHistory).ColumnName("LSHOMEHISTORY");
            this.Column(p => p.LsHowPregnant).ColumnName("LSHOWPREGNANT");
            this.Column(p => p.LsHurt).ColumnName("LSHURT");
            this.Column(p => p.LsHurtmyself).ColumnName("LSHURTMYSELF");
            this.Column(p => p.LsIdCardStatus).ColumnName("LSIDCARDSTATUS");
            this.Column(p => p.LsIfBodyGood).ColumnName("LSIFBODYGOOD");
            this.Column(p => p.LsIfGrade).ColumnName("LSIFGRADE");
            this.Column(p => p.LsIfMonth).ColumnName("LSIFMONTH");
            this.Column(p => p.LsInsight).ColumnName("LSINSIGHT");
            this.Column(p => p.LsIntelligence).ColumnName("LSINTELLIGENCE");
            this.Column(p => p.LsLanuage).ColumnName("LSLANUAGE");
            this.Column(p => p.LsLastHistory).ColumnName("LsLastHistory");
            this.Column(p => p.LsLifeAbility).ColumnName("LSLIFEABILITY");
            this.Column(p => p.LsMarriage).ColumnName("LSMARRIAGE");
            this.Column(p => p.LsMemory).ColumnName("LSMEMORY");
            this.Column(p => p.LsNervousSystem).ColumnName("LSNERVOUSSYSTEM");
            this.Column(p => p.LsNoise).ColumnName("LsNoise");
            this.Column(p => p.LsOnsetForm).ColumnName("LSONSETFORM");
            this.Column(p => p.LsPHobby).ColumnName("LSPHOBBY");
            this.Column(p => p.LsPRelation).ColumnName("LSPRELATION");
            this.Column(p => p.LsRealize).ColumnName("LSREALIZE");
            this.Column(p => p.LsRale).ColumnName("LSRALE");
            this.Column(p => p.LsRelationship).ColumnName("LSRELATIONSHIP");
            this.Column(p => p.LsSelfdestruction).ColumnName("LSSELFDESTRUCTION");
            this.Column(p => p.LsSensitive).ColumnName("LSSENSITIVE");
            this.Column(p => p.LsSerious).ColumnName("LSSERIOUS");
            this.Column(p => p.LsSHW).ColumnName("LSSHW");
            this.Column(p => p.LsSleeping).ColumnName("LSSLEEPING");
            this.Column(p => p.LsSpecailHobby).ColumnName("LSSPECAILHOBBY");
            this.Column(p => p.LsSpecialHistory).ColumnName("LSSPECIALHISTORY");
            this.Column(p => p.LsStudyCondition).ColumnName("LSSTUDYCONDITION");
            this.Column(p => p.LsStudyGrade).ColumnName("LSSTUDYGRADE");
            this.Column(p => p.LsThinking).ColumnName("LSTHINKING");
            this.Column(p => p.LsTouching).ColumnName("LSTOUCHING");
            this.Column(p => p.LsWorkCondition).ColumnName("LSWORKCONDITION");
            this.Column(p => p.MaxMedicine).ColumnName("MAXMEDICINE");
            this.Column(p => p.Menstrual).ColumnName("MENSTRUAL");
            this.Column(p => p.MzRegId).ColumnName("MZREGID");
            this.Column(p => p.Name).ColumnName("NAME");
            this.Column(p => p.Native).ColumnName("NATIVE");
            this.Column(p => p.NowMedicine).ColumnName("NOWMEDICINE");
            this.Column(p => p.OnceMedicine).ColumnName("ONCEMEDICINE");
            this.Column(p => p.OnsetDate).ColumnName("ONSETDATE");
            this.Column(p => p.OuDate).ColumnName("OUDATE");
            this.Column(p => p.OuNo).ColumnName("OUNO");
            this.Column(p => p.Phone).ColumnName("PHONE");
            this.Column(p => p.PostCodeHome).ColumnName("POSTCODEHOME");
            this.Column(p => p.PostCodePresent).ColumnName("POSTCODEPRESENT");
            this.Column(p => p.ProviderCultureId).ColumnName("PROVIDERCULTUREID");
            this.Column(p => p.ProviderName).ColumnName("PROVIDERNAME");
            this.Column(p => p.ProviderRelationId).ColumnName("PROVIDERCULTUREID");
            this.Column(p => p.ProviderWorktypeId).ColumnName("PROVIDERWORKTYPEID");
            this.Column(p => p.Pulse).ColumnName("PULSE");
            this.Column(p => p.Qty).ColumnName("QTY");
           // this.Column(p => p.RedisConditionValus).ColumnName("");
            this.Column(p => p.RelationId).ColumnName("RELATIONID");
            this.Column(p => p.ReviewDate).ColumnName("REVIEWDATE");
            this.Column(p => p.ReviewSign).ColumnName("REVIEWSIGN");
            //this.Column(p => p.RowStatus).ColumnName("");
            this.Column(p => p.Saying).ColumnName("SAYING");
            this.Column(p => p.Schooling).ColumnName("SCHOOLING");
            this.Column(p => p.SenRemark).ColumnName("SENREMARK");
            this.Column(p => p.Sex).ColumnName("SEX");
            this.Column(p => p.SM).ColumnName("SM");
            this.Column(p => p.SpecailRemark).ColumnName("SPECAILREMARK");
            this.Column(p => p.SpeRemark).ColumnName("SPEREMARK");
            this.Column(p => p.SpiritCheckOther).ColumnName("SPIRITCHECKOTHER");
            this.Column(p => p.SpiritCheckUp).ColumnName("SPIRITCHECKUP");
            this.Column(p => p.Temperature).ColumnName("TEMPERATURE");
            this.Column(p => p.Tentative).ColumnName("TENTATIVE");
            this.Column(p => p.TentativeDocSign).ColumnName("TENTATIVEDOCSIGN");
            this.Column(p => p.TreatDate).ColumnName("TREATDATE");
            this.Column(p => p.TreatResult).ColumnName("TREATRESUL");
            this.Column(p => p.Walking).ColumnName("WALKING");
            this.Column(p => p.WhatWork).ColumnName("WHATWORK");
            this.Column(p => p.Working).ColumnName("WORKING");
            this.Column(p => p.WorktypeId).ColumnName("WORKTYPEID");

            this.Id(t => t.GUID); this.Ignore(p => p.IsModify);
        }
    }
}
