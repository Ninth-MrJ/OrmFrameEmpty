<!--***********************************************************************************

   Extended WPF Toolkit

   Copyright (C) 2007-2013 Xceed Software Inc.

   This program is provided to you under the terms of the Microsoft Public
   License (Ms-PL) as published at http://wpftoolkit.codeplex.com/license 

   For more features, controls, and fast professional support,
   pick up the Plus Edition at http://xceed.com/wpf_toolkit

   Stay informed: follow @datagrid on Twitter or Like http://facebook.com/datagrids

  **********************************************************************************-->

<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:media="clr-namespace:Orm.Toolkit.Core.Media"
                    xmlns:conv="clr-namespace:Orm.Toolkit.Core.Converters"
                    xmlns:primitives="clr-namespace:Orm.Toolkit.Primitives">



    <!-- =============================================================================== -->
    <!-- Images for the buttons and their various states                                 -->
    <!-- =============================================================================== -->

    <!-- ResizeGrip -->
    <ImageBrush x:Key="resize_grip" 
                ImageSource="Images/resize_grip.png" />

    <Style x:Key="buttonImageStyle" TargetType="Image">
        <Setter Property="Stretch" Value="None" />
        <Setter Property="UseLayoutRounding" Value="True" />
        <Setter Property="RenderOptions.EdgeMode" Value="Aliased" />
        <Setter Property="RenderOptions.BitmapScalingMode" Value="NearestNeighbor" />
    </Style>

    <!-- Minimize -->
    <BitmapImage x:Key="minimize_normal"
                UriSource="Images/minimize_normal.png" />
    <BitmapImage x:Key="minimize_hover"
                UriSource="Images/minimize_hover.png" />
    <BitmapImage x:Key="minimize_pressed"
                UriSource="Images/minimize_pressed.png" />
    <BitmapImage x:Key="minimize_inactive"
                UriSource="Images/minimize_inactive.png" />

    <!-- Maximize -->
    <BitmapImage x:Key="maximize_normal"
                UriSource="Images/maximize_normal.png" />
    <BitmapImage x:Key="maximize_hover"
                UriSource="Images/maximize_hover.png" />
    <BitmapImage x:Key="maximize_pressed"
                UriSource="Images/maximize_pressed.png" />
    <BitmapImage x:Key="maximize_inactive"
                UriSource="Images/maximize_inactive.png" />
    <BitmapImage x:Key="maximize_disabled"
                UriSource="Images/maximize_disabled.png" />

    <!-- Restore -->
    <BitmapImage x:Key="restore_normal"
                UriSource="Images/restore_normal.png" />
    <BitmapImage x:Key="restore_hover"
                UriSource="Images/restore_hover.png" />
    <BitmapImage x:Key="restore_pressed"
                UriSource="Images/restore_pressed.png" />
    <BitmapImage x:Key="restore_inactive"
                UriSource="Images/restore_inactive.png" />
    <BitmapImage x:Key="restore_disabled"
                UriSource="Images/restore_disabled.png" />

    <!-- Close -->
    <BitmapImage  x:Key="close_normal"
                 UriSource="Images/close_normal.png" />
    <BitmapImage  x:Key="close_hover"
                 UriSource="Images/close_hover.png" />
    <BitmapImage  x:Key="close_pressed"
                 UriSource="Images/close_pressed.png" />
    <BitmapImage  x:Key="close_inactive"
                 UriSource="Images/close_inactive.png" />

    <!-- Close (with 2 rounded corners) -->
    <BitmapImage x:Key="close_rounded_normal"
                UriSource="Images/close_rounded_normal.png" />
    <BitmapImage x:Key="close_rounded_hover"
                UriSource="Images/close_rounded_hover.png" />
    <BitmapImage x:Key="close_rounded_pressed"
                UriSource="Images/close_rounded_pressed.png" />
    <BitmapImage x:Key="close_rounded_inactive"
                UriSource="Images/close_rounded_inactive.png" />

    <!-- Close (for ToolWindow) -->
    <BitmapImage x:Key="close_toolwindow_normal"
                UriSource="Images/close_toolwindow_normal.png" />
    <BitmapImage x:Key="close_toolwindow_hover"
                UriSource="Images/close_toolwindow_hover.png" />
    <BitmapImage x:Key="close_toolwindow_pressed"
                UriSource="Images/close_toolwindow_pressed.png" />
    <BitmapImage x:Key="close_toolwindow_inactive"
                UriSource="Images/close_toolwindow_inactive.png" />


    <!-- =============================================================================== -->
    <!-- Common Styles                                                                   -->
    <!-- Need to find a way to share these for WindowControl and StylableWindow          -->
    <!-- =============================================================================== -->

    <!-- Button template -->
    <ControlTemplate x:Key="buttonTemplate" TargetType="Button">
        <Border Name="outerBorder" 
                Background="{TemplateBinding Background}" 
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}">
            <Image Source="{TemplateBinding Content}" Style="{StaticResource buttonImageStyle}"/>
        </Border>
    </ControlTemplate>

    <Style x:Key="windowButtonBaseStyle" TargetType="Button">
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Margin" Value="0,-1,0,0" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Template" Value="{StaticResource buttonTemplate}" />
    </Style>

    <!--Default Close button style-->
    <!--<Style x:Key="{ComponentResourceKey 
                  TypeInTargetAssembly={x:Type primitives:WindowControl}, 
                  ResourceId=DefaultCloseButtonStyle}"
           TargetType="Button" 
          BasedOn="{StaticResource windowButtonBaseStyle}">
        <Setter Property="ToolTip" Value="Close" />
        <Setter Property="Content" Value="{StaticResource close_normal}" />
        <Style.Triggers>
            --><!-- Regular Window --><!--
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource TemplatedParent},Path=IsActive}" Value="False">
                <Setter Property="Content" Value="{StaticResource close_inactive}" />
            </DataTrigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Content" Value="{StaticResource close_hover}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Content" Value="{StaticResource close_pressed}" />
            </Trigger>

            --><!-- NoResize (Close button with 2 rounded corners) -->

            <!-- Tool Window --><!--
            <Trigger Property="Name" Value="PART_ToolWindowCloseButton">
                <Setter Property="Content" Value="{StaticResource close_toolwindow_normal}" />
            </Trigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding RelativeSource={RelativeSource self},Path=Name}" Value="PART_ToolWindowCloseButton" />
                    <Condition Binding="{Binding RelativeSource={RelativeSource TemplatedParent},Path=IsActive}" Value="False" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Content" Value="{StaticResource close_toolwindow_inactive}" />
            </MultiDataTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="Name" Value="PART_ToolWindowCloseButton" />
                    <Condition Property="IsMouseOver" Value="True" />
                </MultiTrigger.Conditions>
                <Setter Property="Content" Value="{StaticResource close_toolwindow_hover}" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="Name" Value="PART_ToolWindowCloseButton" />
                    <Condition Property="IsPressed" Value="True" />
                </MultiTrigger.Conditions>
                <Setter Property="Content" Value="{StaticResource close_toolwindow_pressed}" />
            </MultiTrigger>

        </Style.Triggers>
    </Style>-->

     <!--Default Close button style-->
    <Style x:Key="{ComponentResourceKey 
                  TypeInTargetAssembly={x:Type primitives:WindowControl}, 
                  ResourceId=DefaultCloseButtonStyle}"
           TargetType="Button" 
          BasedOn="{StaticResource windowButtonBaseStyle}">
        <Setter Property="ToolTip" Value="关闭" />
        <Setter Property="Margin" Value="0,0,0,0" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="border">
                                            <EasingColorKeyFrame KeyTime="0" Value="#FFFF5515"/>
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="border">
                                            <EasingColorKeyFrame KeyTime="0" Value="#FFE94709"/>
                                        </ColorAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="path">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0.5"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="path">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0.5"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="border" Background="#00FF0000">
                            <Path x:Name="path" Data="M1.4997891,1.4901161E-08 C1.8838022,1.4901161E-08 2.2678153,0.14650325 2.5608225,0.43950964 L8.9999931,6.8787471 15.439163,0.43950964 C16.024171,-0.14650321 16.975217,-0.14650321 17.56123,0.43950964 18.146237,1.0244851 18.146237,1.9744406 17.56123,2.560423 L11.121695,9.0004707 17.56123,15.440074 C18.146237,16.026056 18.146237,16.976041 17.56123,17.562025 17.268224,17.855014 16.884209,18.001007 16.500197,18.001007 16.116183,18.001007 15.732171,17.855014 15.439163,17.562025 L8.9999931,11.122342 2.5608225,17.562025 C2.2678153,17.855014 1.8838022,18.001007 1.4997891,18.001007 1.1157759,18.001007 0.73176275,17.855014 0.43875544,17.562025 -0.14625181,16.976041 -0.14625181,16.026056 0.43875544,15.440074 L6.8782909,9.0004707 0.43875544,2.560423 C-0.14625181,1.9744406 -0.14625181,1.0244851 0.43875544,0.43950964 0.73176275,0.14650325 1.1157759,1.4901161E-08 1.4997891,1.4901161E-08 z" Fill="White" Stretch="Fill" Width="15" Height="15" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="5" >
                                <Path.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform/>
                                        <SkewTransform/>
                                        <RotateTransform/>
                                        <TranslateTransform/>
                                    </TransformGroup>
                                </Path.RenderTransform>
                            </Path>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True"/>
                        <Trigger Property="IsDefaulted" Value="True"/>
                        <Trigger Property="IsMouseOver" Value="True"/>
                        <Trigger Property="IsPressed" Value="True"/>
                        <Trigger Property="IsEnabled" Value="False"/>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <SolidColorBrush x:Key="Window_WindowBorderBrush" Color="#FF252C33" />

    <conv:ColorBlendConverter x:Key="Window_WindowBackground_converter" BlendedColor="#FFA0A0A0" BlendedColorRatio="0.35" />
    <SolidColorBrush x:Key="Window_WindowBackground" 
                    Color="{Binding 
                        Source={x:Static media:WindowColors.ColorizationColor}, 
                        Converter={StaticResource Window_WindowBackground_converter}}" 
                    Opacity="0.85"/>

    <!--<SolidColorBrush x:Key="Window_Background"  Color="White"/>-->

    <SolidColorBrush x:Key="Window_Background"  Color="White"/>

    <SolidColorBrush x:Key="Window_BorderBrush" Color="#5D6C7A" />

    <Thickness x:Key="Window_BorderThickness" Left="1" Right="1" Bottom="1" Top="1" />

    <conv:ColorBlendConverter x:Key="Window_WindowInactiveBackground_converter" BlendedColor="#FFF0F0F0" BlendedColorRatio="0.67" />
    <SolidColorBrush x:Key="Window_WindowInactiveBackground" 
                    Color="{Binding 
                        Source={x:Static media:WindowColors.ColorizationColor}, 
                        Converter={StaticResource Window_WindowInactiveBackground_converter}}" 
                    Opacity="0.85"/>

    <SolidColorBrush x:Key="Window_CaptionForeground" Color="Black"/>

    <Thickness x:Key="Window_WindowBorderThickness">1</Thickness>

    <!-- ========================================================================= -->
    <!-- Used by ColorPicker and ColorCanvas                                       -->
    <!-- ========================================================================= -->
    <DrawingBrush  x:Key="CheckerBrush" Viewport="0,0,10,10" ViewportUnits="Absolute" TileMode="Tile">
        <DrawingBrush.Drawing>
            <DrawingGroup>
                <GeometryDrawing Brush="White">
                    <GeometryDrawing.Geometry>
                        <RectangleGeometry Rect="0,0 100,100" />
                    </GeometryDrawing.Geometry>
                </GeometryDrawing>
                <GeometryDrawing Brush="LightGray">
                    <GeometryDrawing.Geometry>
                        <GeometryGroup>
                            <RectangleGeometry Rect="0,0 50,50" />
                            <RectangleGeometry Rect="50,50 50,50" />
                        </GeometryGroup>
                    </GeometryDrawing.Geometry>
                </GeometryDrawing>
            </DrawingGroup>
        </DrawingBrush.Drawing>
    </DrawingBrush>
    
    <!-- ========================================================================= -->
    <!-- 除去按钮点击后的虚线框                                     -->
    <!-- ========================================================================= -->
    <Style x:Key="ExceptDottedLineFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="-2" StrokeThickness="0" Stroke="Red" StrokeDashArray="1 2" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- ========================================================================= -->
    <!-- Used by YesButton and OKButton                                       -->
    <!-- ========================================================================= -->
    <Style x:Key="MessageButtonBaseStyle" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource ExceptDottedLineFocusVisual}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <!-- 我们将 Grid 用作根，原因在于这便于添加更多的元素来自定义按钮 -->
                    <Grid x:Name="Grid">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <!--<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Storyboard.TargetName="Border">
                                            <EasingColorKeyFrame KeyTime="0" Value="#FF58FD2B"/>
                                        </ColorAnimationUsingKeyFrames>-->
                                        <!--<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Storyboard.TargetName="Border">
                                            <EasingColorKeyFrame KeyTime="0" Value="#FF3AE40B"/>
                                        </ColorAnimationUsingKeyFrames>-->
                                        <!--<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="path">
                                            <EasingColorKeyFrame KeyTime="0" Value="#E5DDFFBD"/>
                                        </ColorAnimationUsingKeyFrames>-->
                                        <!--<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="Border">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="1.05"/>
                                        </DoubleAnimationUsingKeyFrames>-->
                                        <!--<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="contentPresenter">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="1.05"/>
                                        </DoubleAnimationUsingKeyFrames>-->
                                        <!--<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="Border">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="1.05"/>
                                        </DoubleAnimationUsingKeyFrames>-->
                                        <!--<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="contentPresenter">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="1.05"/>
                                        </DoubleAnimationUsingKeyFrames>-->
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Rectangle" Storyboard.TargetProperty="(UIElement.Visibility)" >
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <!--<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Storyboard.TargetName="Border">
                                            <EasingColorKeyFrame KeyTime="0" Value="#FF2DC603"/>
                                        </ColorAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Storyboard.TargetName="Border">
                                            <EasingColorKeyFrame KeyTime="0" Value="#FF29A507"/>
                                        </ColorAnimationUsingKeyFrames>-->
                                        <!--<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="path">
                                            <EasingColorKeyFrame KeyTime="0" Value="#E572E407"/>
                                        </ColorAnimationUsingKeyFrames>-->
                                        <!--<ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.BorderThickness)" Storyboard.TargetName="Border">
                                            <EasingThicknessKeyFrame KeyTime="0" Value="2,2,1,1" />
                                        </ThicknessAnimationUsingKeyFrames>-->
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="Border">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="1.05"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="contentPresenter">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="1.05"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="Border"  Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" Padding="0" BorderThickness="0" CornerRadius="4" RenderTransformOrigin="0.5,0.5">
                            <!--Padding="{TemplateBinding Padding}"-->
                            <!--<Border.Background>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="#FF2DD000" Offset="0.489"/>
                                    <GradientStop Color="#FF4BDC23" Offset="0.456"/>
                                </LinearGradientBrush>
                            </Border.Background>-->
                            <Border.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform/>
                                    <SkewTransform/>
                                    <RotateTransform/>
                                    <TranslateTransform/>
                                </TransformGroup>
                            </Border.RenderTransform>
                            <Grid>
                                <Rectangle x:Name="Rectangle" Stroke="{x:Null}" RadiusX="5" RadiusY="5" Visibility="Hidden" >
                                    <Rectangle.Fill>
                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                            <GradientStop Color="#FF50AEFD" Offset="0"/>
                                            <GradientStop Color="#FF389CF1" Offset="1"/>
                                        </LinearGradientBrush>
                                    </Rectangle.Fill>
                                    <Rectangle.Effect>
                                        <DropShadowEffect ShadowDepth="1" Opacity="0.3" BlurRadius="2"/>
                                    </Rectangle.Effect>
                                </Rectangle>
                                <!--<Path Data="M10.000001,1.1368684E-13 L188,1.1368684E-13 C193.52284,-7.7486027E-07 198,4.4771516 198,9.9999983 L198,10.999999 C198,5.477152 193.52284,0.99999923 188,0.99999809 L10.000001,0.99999809 C4.4771523,0.99999923 -1.4210855E-14,5.477152 0,10.999999 L0,9.9999983 C-1.4210855E-14,4.4771516 4.4771523,-7.7486027E-07 10.000001,1.1368684E-13 z" Fill="#E5D7FFC3" Height="11" Stretch="Fill" StrokeThickness="0" Width="198"/>-->
                                <!--Height="29.155" Canvas.Left="41.366" Canvas.Top="23.227" Width="124.588"-->
                                <!--<Path x:Name="path" Data="M117.66697,27.999547 C79.666918,28.999925 36.666972,29.999745 -0.33302737,27.999822 -15.77446,27.165182 26.191342,0 58.5,0 90.808658,0 133.12559,27.592588 117.66697,27.999547 z" Fill="#E565FF00" Stretch="Fill">
                                    <Path.OpacityMask>
                                        <RadialGradientBrush RadiusY="0.499" RadiusX="0.498" GradientOrigin="0.48,0.88" Center="0.48,0.925">
                                            <GradientStop Color="#00000000" Offset="0.737"/>
                                            <GradientStop Color="#CCFFFFFF" Offset="0.196"/>
                                        </RadialGradientBrush>
                                    </Path.OpacityMask>
                                </Path>-->
                                <Path x:Name="path"  />
                            </Grid>
                        </Border>
                        <ContentPresenter x:Name="contentPresenter" ContentSource="Content" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"  RenderTransformOrigin="0.5,0.5">
                            <ContentPresenter.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform/>
                                    <SkewTransform/>
                                    <RotateTransform/>
                                    <TranslateTransform/>
                                </TransformGroup>
                            </ContentPresenter.RenderTransform>
                        </ContentPresenter>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True"/>
                        <Trigger Property="IsDefaulted" Value="True"/>
                        <Trigger Property="IsMouseOver" Value="True"/>
                        <Trigger Property="IsPressed" Value="True"/>
                        <Trigger Property="IsEnabled" Value="False"/>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Width" Value="85" />
        <Setter Property="Height" Value="28" />
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Cursor" Value="Hand" />
        <!--<Setter Property="Background">
            <Setter.Value>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="#FF50AEFD" Offset="0"/>
                        <GradientStop Color="#FF389CF1" Offset="1"/>
                    </LinearGradientBrush>
            </Setter.Value>
        </Setter>-->
        <!--<Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect ShadowDepth="1" Opacity="0.3" BlurRadius="2"/>
            </Setter.Value>
        </Setter>-->
        <!--<Setter Property="BorderBrush" Value="#FF2A93FF" />-->
        <Setter Property="Padding" Value="5,2,5,2" />

        <!--<Setter Property="Background" Value="#FF2A93FF" />-->
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <!--<Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background">
                    <Setter.Value>
                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                            <GradientStop Color="#FF228EEA" Offset="0"/>
                            <GradientStop Color="#FF34A2FF" Offset="1"/>
                        </LinearGradientBrush>
                    </Setter.Value> 
                </Setter>
            </Trigger>
        </Style.Triggers>-->
    </Style>

    <Style x:Key="YesButtonStyle" TargetType="Button" BasedOn="{StaticResource MessageButtonBaseStyle}">
        <Setter Property="IsDefault" Value="True" />
        <Setter Property="IsCancel" Value="False" />
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <!--<GradientStop Color="#FF0497F5" Offset="0.489"/>-->
                    <GradientStop Color="#FF2E87E4" Offset="0.489"/>
                    <GradientStop Color="#FF4995E5" Offset="0.456"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="BorderBrush" Value="#FF0D85E2" />
    </Style>
    
    <Style x:Key="CancelButtonStyle" TargetType="Button" BasedOn="{StaticResource MessageButtonBaseStyle}">
        <Setter Property="IsDefault" Value="False" />
        <Setter Property="IsCancel" Value="True" />
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="#FF7E7E7E" Offset="0.489"/>
                    <GradientStop Color="#FFA7A2A2"  Offset="0.456"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="BorderBrush" Value="#FF706D6D" />
    </Style>

    <Style x:Key="OkButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource YesButtonStyle}">
        <Setter Property="IsDefault" Value="True" />
        <Setter Property="IsCancel" Value="False" />
    </Style>
    <Style x:Key="NoButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource YesButtonStyle}">
        <Setter Property="IsDefault" Value="False" />
        <Setter Property="IsCancel" Value="False" />
    </Style>

</ResourceDictionary>