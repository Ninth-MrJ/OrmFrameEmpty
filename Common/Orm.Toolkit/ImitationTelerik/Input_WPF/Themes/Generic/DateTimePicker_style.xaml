<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
        xmlns:telerikInput="clr-namespace:Orm.Toolkit.Telerik.Windows.Controls"
        xmlns:telerikChromes="clr-namespace:Orm.Toolkit.Telerik.Windows.Controls.Chromes" 
        xmlns:theme="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero"
        xmlns:telerik="clr-namespace:Orm.Toolkit.Telerik.Windows.Controls"
        xmlns:primitives="clr-namespace:Orm.Toolkit.Telerik.Windows.Controls.Primitives"  
         xmlns:calendar="clr-namespace:Orm.Toolkit.Telerik.Windows.Controls.Calendar">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="../../../Controls_WPF/Themes/Generic/Office/Blue/Common.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <!-- Calendar and DatePicker -->

    <telerik:InvertedBooleanToVisibilityConverter x:Key="InvertedBooleanToVisibilityConverterInstance" />

    <!-- CalendarButtonStyle -->
    <Style x:Key="CalendarButtonStyle" TargetType="calendar:CalendarButton">
        <Setter Property="Padding" Value="0" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />

        <Setter Property="FocusVisualStyle" Value="{x:Null}" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="calendar:CalendarButton">
                    <Grid x:Name="LayoutRoot">
                        
                        <telerikChromes:ButtonChrome x:Name="SelectionChrome" telerik:StyleManager.Theme="{StaticResource Theme}" Margin="{StaticResource CalendarButtonButtonChromeMargin}" CornerRadius="{StaticResource SplitButton_SpanCornerRadius}" RenderNormal="False" RenderFocused="{TemplateBinding IsFocused}" RenderSelected="{TemplateBinding IsSelected}" RenderHighlighted="{TemplateBinding IsMouseOver}" />
                        <Border x:Name="TodayVisual"  Margin="{StaticResource CalendarButtonTodayVisualMargin}" Visibility="Collapsed" BorderThickness="1" CornerRadius="2" BorderBrush="{StaticResource ControlOuterBorder_Pressed}" Background="#FF6666" />
                        <ContentPresenter x:Name="Content" Margin="{TemplateBinding Padding}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Grid>
            
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFromCurrentView" Value="False">
                            <Setter TargetName="Content" Property="Opacity" Value="0.5" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="LayoutRoot" Property="Opacity" Value="0.75" />
                        </Trigger>
                        <Trigger Property="ButtonType" Value="TodayDate">
                            <Setter TargetName="TodayVisual" Property="Visibility"  Value="Visible" />
                           
                        </Trigger>
                        <Trigger Property="ButtonType" Value="WeekNumber">
                            <Setter TargetName="SelectionChrome" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="ButtonType" Value="WeekName">
                            <Setter TargetName="SelectionChrome" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                    </ControlTemplate.Triggers>
             
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- calendar:CalendarButton -->
    <Style BasedOn="{StaticResource CalendarButtonStyle}" TargetType="calendar:CalendarButton" >
    </Style>

    <!--CalendarViewStyle-->
    <Style TargetType="calendar:CalendarView" x:Key="CalendarViewStyle">
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="BorderBrush" Value="{StaticResource CalendarOuterBorder}" />
        <Setter Property="Background" Value="{StaticResource CalendarViewBackground}" />
        <Setter Property="BorderThickness" Value="{StaticResource CalendarViewBorderThickness}" />
        <Setter Property="Padding" Value="{StaticResource CalendarViewHeaderPadding}" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="calendar:CalendarView">
                    <Grid Margin="{StaticResource CalendarViewMargin}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>

                        <Border x:Name="BackgroundVisual" Grid.RowSpan="2" Background="{TemplateBinding Background}" />

                        <Border x:Name="Header" Visibility="{TemplateBinding HeaderVisibility}" Margin="{StaticResource CalendarViewHeaderMargin}" Background="{StaticResource CalendarSubHeaderBackground}" BorderBrush="{StaticResource CalendarSubHeaderOuterBorder}" BorderThickness="{TemplateBinding BorderThickness}" >
                            <Border BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{StaticResource CalendarSubHeaderInnerBorder}">
                                <ContentPresenter Content="{TemplateBinding Header}" ContentTemplate="{TemplateBinding HeaderTemplate}" Margin="{TemplateBinding Padding}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                            </Border>
                        </Border>

                        <ItemsPresenter Grid.Row="1" Margin="{StaticResource CalendarItemsMargin}" />

                        <Border x:Name="BorderBrush" Grid.RowSpan="2" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" />

                        <Rectangle x:Name="MinDesiredSize" Grid.Row="1" Width="240" Height="155" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Margin" Value="0" />
    </Style>

    <!--MonthViewStyle-->
    <Style x:Key="MonthViewStyle" TargetType="calendar:CalendarView">
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="BorderBrush" Value="{StaticResource CalendarOuterBorder}" />
        <Setter Property="Background" Value="{StaticResource CalendarViewBackground}" />
        <Setter Property="BorderThickness" Value="{StaticResource CalendarViewBorderThickness}" />
        <Setter Property="Padding" Value="{StaticResource CalendarViewHeaderPadding}" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="calendar:CalendarView">
                    <Grid Margin="{StaticResource CalendarViewMargin}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>

                        <Border x:Name="BackgroundVisual" Grid.RowSpan="2" Background="{TemplateBinding Background}" />

                        <Border x:Name="Header" Visibility="{TemplateBinding HeaderVisibility}" Margin="{StaticResource CalendarViewHeaderMargin}" Background="{StaticResource CalendarSubHeaderBackground}" BorderBrush="{StaticResource CalendarSubHeaderOuterBorder}" BorderThickness="{TemplateBinding BorderThickness}" >
                            <Border BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{StaticResource CalendarSubHeaderInnerBorder}">
                                <ContentPresenter Content="{TemplateBinding Header}" ContentTemplate="{TemplateBinding HeaderTemplate}" Margin="{TemplateBinding Padding}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                            </Border>
                        </Border>

                        <Grid x:Name="WeekHeaders" Grid.Row="1" DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*" />
                                <RowDefinition Height="6*" />
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="7*" />
                            </Grid.ColumnDefinitions>

                            <Border x:Name="VerticalOuterBorder" Grid.RowSpan="2"	
									Canvas.ZIndex="{StaticResource CalendarWeekHeaderVerticalOuterBorderZIndex}"
									BorderBrush="{StaticResource CalendarWeekHeaderVerticalOuterBorder}"
									BorderThickness="{StaticResource CalendarWeekHeaderVerticalOuterBorderThickness}"
									Margin="{StaticResource CalendarWeekHeaderVerticalOuterBorderMargin}"
									Visibility="{Binding Path=HideColumn, Converter={StaticResource InvertedBooleanToVisibilityConverterInstance}}" />
                            <Border x:Name="HorizontalOuterBorder" Grid.ColumnSpan="2"
									Canvas.ZIndex="{StaticResource CalendarWeekHeaderHorizontalOuterBorderZIndex}"
									BorderBrush="{StaticResource CalendarWeekHeaderHorizontalOuterBorder}"
									BorderThickness="{StaticResource CalendarWeekHeaderHorizontalOuterBorderThickness}"
									Margin="{StaticResource CalendarWeekHeaderHorizontalOuterBorderMargin}"
									Visibility="{Binding Path=HideRow, Converter={StaticResource InvertedBooleanToVisibilityConverterInstance}}" />
                            <Border x:Name="VerticalInnerBorder" Grid.RowSpan="2" 
									Canvas.ZIndex="{StaticResource CalendarWeekHeaderVerticalInnerBorderZIndex}"
									BorderBrush="{StaticResource CalendarWeekHeaderVerticalInnerBorder}"
									BorderThickness="{StaticResource CalendarWeekHeaderVerticalInnerBorderThickness}"
									Margin="{StaticResource CalendarWeekHeaderVerticalInnerBorderMargin}"
									Visibility="{Binding Path=HideColumn, Converter={StaticResource InvertedBooleanToVisibilityConverterInstance}}" />
                            <Border x:Name="HorizontalInnerBorder" Grid.ColumnSpan="2"
									Canvas.ZIndex="{StaticResource CalendarWeekHeaderHorizontalInnerBorderZIndex}"
									BorderBrush="{StaticResource CalendarWeekHeaderHorizontalInnerBorder}"
									BorderThickness="{StaticResource CalendarWeekHeaderHorizontalInnerBorderThickness}"
									Margin="{StaticResource CalendarWeekHeaderHorizontalInnerBorderMargin}"
									Visibility="{Binding Path=HideRow, Converter={StaticResource InvertedBooleanToVisibilityConverterInstance}}" />
                            <Rectangle x:Name="VerticalBackground" Grid.RowSpan="2" 
									Canvas.ZIndex="{StaticResource CalendarWeekHeaderVerticalBackgroundZIndex}"
									Fill="{StaticResource CalendarWeekHeaderVerticalBackground}"
									Margin="{StaticResource CalendarWeekHeaderVerticalBackgroundMargin}"
									Visibility="{Binding Path=HideColumn, Converter={StaticResource InvertedBooleanToVisibilityConverterInstance}}" />
                            <Rectangle x:Name="HorizontalBackground" Grid.ColumnSpan="2" 
									Canvas.ZIndex="{StaticResource CalendarWeekHeaderHorizontalBackgroundZIndex}"
									Fill="{StaticResource CalendarWeekHeaderHorizontalBackground}"
									Margin="{StaticResource CalendarWeekHeaderHorizontalBackgroundMargin}"
									Visibility="{Binding Path=HideRow, Converter={StaticResource InvertedBooleanToVisibilityConverterInstance}}" />

                        </Grid>

                        <ItemsPresenter Grid.Row="1" Margin="{StaticResource CalendarItemsMargin}" />

                        <Border x:Name="BorderBrush" Grid.RowSpan="2" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" />

                        <Rectangle x:Name="MinDesiredSize" Grid.Row="1" Width="240" Height="155" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Margin" Value="0" />
    </Style>

    <!--calendar:CalendarView-->
    <Style TargetType="calendar:CalendarView" BasedOn="{StaticResource MonthViewStyle}"  >
    </Style>

    <!-- HeaderButtonChrome -->
    <Style x:Key="HeaderButtonChrome" TargetType="telerikChromes:ButtonChrome">
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="{StaticResource HeaderButtonOuterBorder_Normal}" />
        <Setter Property="Background" Value="{StaticResource HeaderButtonBackground_Normal}" />
        <Setter Property="CornerRadius" Value="{StaticResource SplitButton_SpanCornerRadius}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="telerikChromes:ButtonChrome">
                    <Grid>
                 
                        <Border x:Name="OuterBorder" CornerRadius="{TemplateBinding CornerRadius}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                            <Border x:Name="InnerBorder" CornerRadius="{TemplateBinding InnerCornerRadius}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{StaticResource HeaderButtonInnerBorder_Normal}" />
                        </Border>
                    </Grid>
          
                    <ControlTemplate.Triggers>
                        <Trigger Property="RenderMouseOver" Value="True">
                            <Setter TargetName="OuterBorder" Property="BorderBrush" Value="{StaticResource HeaderButtonOuterBorder_MouseOver}" />
                            <Setter TargetName="InnerBorder" Property="BorderBrush" Value="{StaticResource HeaderButtonInnerBorder_MouseOver}" />
                            <Setter TargetName="OuterBorder" Property="Background" Value="{StaticResource HeaderButtonBackground_MouseOver}" />
                        </Trigger>
                        <Trigger Property="RenderPressed" Value="True">
                            <Setter TargetName="OuterBorder" Property="BorderBrush" Value="{StaticResource HeaderButtonOuterBorder_Pressed}" />
                            <Setter TargetName="InnerBorder" Property="BorderBrush" Value="{StaticResource HeaderButtonInnerBorder_Pressed}" />
                            <Setter TargetName="OuterBorder" Property="Background" Value="{StaticResource HeaderButtonBackground_Pressed}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
         
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--MoveLeftButtonStyle-->
    <Style x:Key="MoveLeftButtonStyle" TargetType="RepeatButton">
        <Setter Property="Width" Value="22" />
        <Setter Property="Height" Value="22" />
        <Setter Property="Margin" Value="3" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RepeatButton">
                    <Grid Background="Transparent">
                
                        <telerikChromes:ButtonChrome Style="{StaticResource HeaderButtonChrome}" CornerRadius="{StaticResource SplitButton_SpanCornerRadius}" RenderMouseOver="{TemplateBinding IsMouseOver}" RenderPressed="{TemplateBinding IsPressed}" RenderFocused="{TemplateBinding IsFocused}" />
                        <Path x:Name="BackgroundIcon" Fill="{StaticResource HeaderButtonIconBackground_Normal}" Margin="0 2 0 0" Width="4" Height="7" Data="M4,0 L4,7 3,7 3,6 2,6 2,5 1,5 1,4 0,4 0,3 1,3 1,2 2,2 2,1 3,1 3,0 z" />
                        <Path x:Name="ForegroundIcon" Fill="{StaticResource HeaderButtonIconForeground_Normal}" Margin="0 1 0 1" Width="4" Height="7" Data="M4,0 L4,7 3,7 3,6 2,6 2,5 1,5 1,4 0,4 0,3 1,3 1,2 2,2 2,1 3,1 3,0 z" />
                    </Grid>
           
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="BackgroundIcon" Property="Fill" Value="{StaticResource HeaderButtonIconBackground_MouseOver}" />
                            <Setter TargetName="ForegroundIcon" Property="Fill" Value="{StaticResource HeaderButtonIconForeground_MouseOver}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="BackgroundIcon" Property="Fill" Value="{StaticResource HeaderButtonIconBackground_Pressed}" />
                            <Setter TargetName="ForegroundIcon" Property="Fill" Value="{StaticResource HeaderButtonIconForeground_Pressed}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="BackgroundIcon" Property="Fill" Value="{StaticResource HeaderButtonIconBackground_Disabled}" />
                            <Setter TargetName="ForegroundIcon" Property="Fill" Value="{StaticResource HeaderButtonIconForeground_Disabled}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
          
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--MoveRightButtonStyle-->
    <Style x:Key="MoveRightButtonStyle" TargetType="RepeatButton">
        <Setter Property="Width" Value="22" />
        <Setter Property="Height" Value="22" />
        <Setter Property="Margin" Value="3" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RepeatButton">
                    <Grid Background="Transparent">
              
                        <telerikChromes:ButtonChrome Style="{StaticResource HeaderButtonChrome}" CornerRadius="{StaticResource SplitButton_SpanCornerRadius}" RenderMouseOver="{TemplateBinding IsMouseOver}" RenderPressed="{TemplateBinding IsPressed}" RenderFocused="{TemplateBinding IsFocused}"/>
                        <Path x:Name="BackgroundIcon" Fill="{StaticResource HeaderButtonIconBackground_Normal}" Margin="0 2 0 0" Width="4" Height="7" Data="M0,0 L0,7 1,7 1,6 2,6 2,5 3,5 3,4 4,4 4,3 3,3 3,2 2,2 2,1 1,1 1,0 z" />
                        <Path x:Name="ForegroundIcon" Fill="{StaticResource HeaderButtonIconForeground_Normal}" Margin="0 1 0 1" Width="4" Height="7" Data="M0,0 L0,7 1,7 1,6 2,6 2,5 3,5 3,4 4,4 4,3 3,3 3,2 2,2 2,1 1,1 1,0 z" />
                    </Grid>
           
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="BackgroundIcon" Property="Fill" Value="{StaticResource HeaderButtonIconBackground_MouseOver}" />
                            <Setter TargetName="ForegroundIcon" Property="Fill" Value="{StaticResource HeaderButtonIconForeground_MouseOver}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="BackgroundIcon" Property="Fill" Value="{StaticResource HeaderButtonIconBackground_Pressed}" />
                            <Setter TargetName="ForegroundIcon" Property="Fill" Value="{StaticResource HeaderButtonIconForeground_Pressed}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="BackgroundIcon" Property="Fill" Value="{StaticResource HeaderButtonIconBackground_Disabled}" />
                            <Setter TargetName="ForegroundIcon" Property="Fill" Value="{StaticResource HeaderButtonIconForeground_Disabled}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
              
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--CalendarHeaderButton-->
    <Style x:Key="CalendarHeaderButton" TargetType="Button">
        <Setter Property="Height" Value="22" />
        <Setter Property="Margin" Value="3" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid x:Name="LayoutRoot">
                  
                        <TextBlock x:Name="BackgroundText" Text="{TemplateBinding Content}" Margin="0 2 0 0" HorizontalAlignment="Center" VerticalAlignment="Center" FontWeight="{StaticResource HeaderTextFontWeight}" Foreground="{StaticResource HeaderTextBackground}" />
                        <TextBlock x:Name="ForegroundText" Text="{TemplateBinding Content}" Margin="0 1 0 1" HorizontalAlignment="Center" VerticalAlignment="Center" FontWeight="{StaticResource HeaderTextFontWeight}" Foreground="{StaticResource HeaderTextForeground}" />
                    </Grid>
               
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="BackgroundText" Property="TextDecorations" Value="Underline" />
                            <Setter TargetName="ForegroundText" Property="TextDecorations" Value="Underline" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="BackgroundText" Property="TextDecorations" Value="Underline" />
                            <Setter TargetName="ForegroundText" Property="TextDecorations" Value="Underline" />
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="BackgroundText" Property="TextDecorations" Value="Underline" />
                            <Setter TargetName="ForegroundText" Property="TextDecorations" Value="Underline" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="LayoutRoot" Property="Opacity" Value="0.75" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                  
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--telerikInput:RadCalendar-->
    <Style TargetType="telerikInput:RadCalendar">
        <Setter Property="Columns" Value="1" />
        <Setter Property="Rows" Value="1" />
        <Setter Property="Foreground" Value="{StaticResource PickerForeground_Normal}" />
        <Setter Property="MonthViewStyle" Value="{StaticResource MonthViewStyle}" />
        <Setter Property="YearViewStyle" Value="{StaticResource CalendarViewStyle}" />
        <Setter Property="DecadeViewStyle" Value="{StaticResource CalendarViewStyle}" />
        <Setter Property="CenturyViewStyle" Value="{StaticResource CalendarViewStyle}" />
        <Setter Property="DayButtonStyle" Value="{StaticResource CalendarButtonStyle}" />
        <Setter Property="MonthButtonStyle" Value="{StaticResource CalendarButtonStyle}" />
        <Setter Property="YearButtonStyle" Value="{StaticResource CalendarButtonStyle}" />
        <Setter Property="DecadeButtonStyle" Value="{StaticResource CalendarButtonStyle}" />
        <Setter Property="Background" Value="{StaticResource PanelBackground}" />
        <Setter Property="BorderBrush" Value="{StaticResource CalendarOuterBorder}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Padding" Value="{StaticResource CalendarHeaderPadding}" />
        <Setter Property="ViewsHeaderVisibility" Value="Collapsed" />
        <Setter Property="IsTabStop" Value="False" />
 
        <Setter Property="SnapsToDevicePixels" Value="True" />
 
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="telerikInput:RadCalendar">
                    <Grid>

                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>

                        <Border x:Name="Background" Grid.RowSpan="2" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" />

                        <calendar:TransitionPanel x:Name="TransitionPanel" Grid.Row="1" ClipToBounds="True" Margin="{StaticResource CalendarTransitionPanelMargin}">
                            <primitives:RadUniformGrid x:Name="MonthViews" Margin="1 1 0 0" Rows="{TemplateBinding Rows}" Columns="{TemplateBinding Columns}" />
                            <primitives:RadUniformGrid x:Name="YearViews" Margin="1 1 0 0" Rows="{TemplateBinding Rows}" Columns="{TemplateBinding Columns}" Visibility="Collapsed" />
                            <primitives:RadUniformGrid x:Name="DecadeViews" Margin="1 1 0 0" Rows="{TemplateBinding Rows}" Columns="{TemplateBinding Columns}" Visibility="Collapsed" />
                            <primitives:RadUniformGrid x:Name="CenturyViews" Margin="1 1 0 0" Rows="{TemplateBinding Rows}" Columns="{TemplateBinding Columns}" Visibility="Collapsed" />
                        </calendar:TransitionPanel>

                        <Border x:Name="OuterBorder" Grid.RowSpan="2" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{StaticResource CalendarOuterBorderCornerRadius}" BorderBrush="{TemplateBinding BorderBrush}">
                            <Border x:Name="InnerBorder" BorderBrush="{StaticResource CalendarInnerBorder}" CornerRadius="{StaticResource CalendarInnerBorderCornerRadius}" BorderThickness="1" />
                        </Border>

                        <Border x:Name="Navigation" Margin="0 0 0 -1" Canvas.ZIndex="2" Visibility="{TemplateBinding HeaderVisibility}" BorderThickness="{StaticResource CalendarHeaderBorderThickness}" CornerRadius="{StaticResource CalendarHeaderOuterCornerRadius}" BorderBrush="{StaticResource HeaderOuterBorder}" Background="{StaticResource HeaderBackground}">
                            <Border BorderThickness="{StaticResource CalendarHeaderBorderThickness}" BorderBrush="{StaticResource HeaderInnerBorder}"  CornerRadius="{StaticResource CalendarHeaderInnerCornerRadius}" Padding="{TemplateBinding Padding}">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>

                                    <RepeatButton x:Name="MoveLeft" Grid.Column="0" Style="{StaticResource MoveLeftButtonStyle}" />
                                    <Button x:Name="Header" Grid.Column="1" Style="{StaticResource CalendarHeaderButton}" />
                                    <RepeatButton x:Name="MoveRight" Grid.Column="2" Style="{StaticResource MoveRightButtonStyle}" />

                                </Grid>
                            </Border>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="MonthViewPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <calendar:CalendarPanel PreserveSpaceForCollapsedChildren="True" FirstColumn="1" VerticalAlignment="Stretch" Rows="7" Columns="8" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="YearViewPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <calendar:CalendarPanel PreserveSpaceForCollapsedChildren="True" VerticalAlignment="Stretch" Rows="3" Columns="4" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="DecadeViewPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <calendar:CalendarPanel PreserveSpaceForCollapsedChildren="True" VerticalAlignment="Stretch" Rows="3" Columns="4" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="CenturyViewPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <calendar:CalendarPanel PreserveSpaceForCollapsedChildren="True" VerticalAlignment="Stretch" Rows="3" Columns="4" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>

    </Style>

   

    <!-- Clock and TimePicker -->

    <Style TargetType="telerikInput:RadClockItem">
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="{StaticResource ClockItemPadding}" />
     
        <Setter Property="SnapsToDevicePixels" Value="True" />
   
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="telerikInput:RadClockItem">
                    <Grid x:Name="LayoutRoot" Background="Transparent">
                    

                        <telerikChromes:ButtonChrome x:Name="SelectionChrome" CornerRadius="{StaticResource SplitButton_SpanCornerRadius}" 
                                                     Margin="{StaticResource ClockButtonChromeMargin}" RenderNormal="False" 
                                                     telerik:StyleManager.Theme="{StaticResource Theme}" RenderSelected="{TemplateBinding IsSelected}" RenderHighlighted="{TemplateBinding IsMouseOver}"
                            />
                            <ContentPresenter x:Name="Content" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                                              Margin="{TemplateBinding Padding}" />

                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!--telerikInput:RadClock-->
    <Style TargetType="telerikInput:RadClock" >

        <Setter Property="Header" Value="Clock" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="BorderBrush" Value="{StaticResource PanelBorderBrush}" />
        <Setter Property="Background" Value="{StaticResource ClockBackground}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Padding" Value="{StaticResource CalendarHeaderPadding}" />
        <Setter Property="IsTabStop" Value="False" />

        <Setter Property="StartTime" Value="0:0:0" />
        <Setter Property="EndTime" Value="23:59:0" />
        <Setter Property="TimeInterval" Value="1:0:0" />

 
        <Setter Property="SnapsToDevicePixels" Value="True" />
  

        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <primitives:RadUniformGrid x:Name="uniformGrid" Columns="4" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate>
                    <TextBlock x:Name="ContentText" Text="{Binding}" TextAlignment="Center" HorizontalAlignment="Center" VerticalAlignment="Center" />
                </DataTemplate>
            </Setter.Value>
        </Setter>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="telerikInput:RadClock">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />                          
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>

                        <Border x:Name="BackgroundVisual" Grid.RowSpan="2" Background="{TemplateBinding Background}" CornerRadius="{StaticResource ClockOuterBorderCornerRadius}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}">
                            <Border CornerRadius="{StaticResource ClockInnerBorderCornerRadius}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{StaticResource ClockInnerBorderBrush}" />
                        </Border>

                        <Border x:Name="Header" BorderThickness="{StaticResource CalendarHeaderBorderThickness}" CornerRadius="{StaticResource CalendarHeaderOuterCornerRadius}" BorderBrush="{StaticResource HeaderOuterBorder}" Background="{StaticResource HeaderBackground}" MinHeight="32">
                            <Border BorderThickness="{StaticResource CalendarHeaderBorderThickness}" BorderBrush="{StaticResource HeaderInnerBorder}"  CornerRadius="{StaticResource CalendarHeaderInnerCornerRadius}" Padding="{TemplateBinding Padding}">
                                <ContentControl Foreground="{StaticResource HeaderTextForeground}" IsTabStop="False"
                                                FontWeight="{StaticResource HeaderTextFontWeight}"
                                                Content="{TemplateBinding Header}" ContentTemplate="{TemplateBinding HeaderTemplate}" 
                                                Margin="{TemplateBinding Padding}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />                                
                            </Border>
                        </Border>

                        <ItemsPresenter Grid.Row="1" Margin="{StaticResource ClockItemsMargin}" />

                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

 

    <DataTemplate x:Key="WatermarkTemplate">
        <Grid Margin="1" VerticalAlignment="Center">
            <TextBlock Opacity="0.5" Text="{Binding}" Margin="2" />
        </Grid>
    </DataTemplate>

	<DataTemplate x:Key="TooltipTemplate">
		<Grid VerticalAlignment="Center" Background="White">
			<ContentPresenter Margin="2" Content="{Binding}" />
		</Grid>
	</DataTemplate>

    <Style TargetType="telerikInput:RadDateTimePicker" x:Key="dateTimePickerStyle">
  
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="SnapsToDevicePixels" Value="True" />		
        <Setter Property="KeyboardNavigation.TabNavigation" Value="Once" />
        <Setter Property="KeyboardNavigation.IsTabStop" Value="False" />
  
		<Setter Property="TooltipTemplate" Value="{StaticResource TooltipTemplate}" />
		<Setter Property="Background" Value="{StaticResource PickerBackground_Normal}" />
        <Setter Property="Foreground" Value="{StaticResource PickerForeground_Normal}" />
        <Setter Property="BorderBrush" Value="{StaticResource ControlOuterBorder_Normal}" />
        <Setter Property="FontStyle" Value="Normal" />
        <Setter Property="FontWeight" Value="Normal" />

        <Setter Property="MinHeight" Value="22" />
        <Setter Property="Padding" Value="4 3" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />

        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="DateTimeWatermarkTemplate" Value="{StaticResource WatermarkTemplate}" />        

        <Setter Property="IsTabStop" Value="False" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="telerikInput:RadDateTimePicker">
                    <Grid>
                      

                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition Width="auto" />
                        </Grid.ColumnDefinitions>

                        <Border x:Name="BackgroundVisual" Grid.ColumnSpan="2"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                Background="{TemplateBinding Background}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{StaticResource SplitButton_SpanCornerRadius}"/>

                        <Border x:Name="MouseOverVisual" Grid.ColumnSpan="2" IsHitTestVisible="False" BorderBrush="{StaticResource ControlOuterBorder_MouseOver}" 
                                BorderThickness="{TemplateBinding BorderThickness}" Opacity="0" Visibility="Collapsed" 
                                CornerRadius="{StaticResource SplitButton_SpanCornerRadius}" />

                        <telerik:RadWatermarkTextBox x:Name="PART_DateTimeInput" Grid.Column="0"
                                Text="{Binding DateTimeText, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                                CurrentText="{Binding CurrentDateTimeText, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                                IsReadOnly="{TemplateBinding IsReadOnly}"
                                VerticalAlignment="Stretch" Padding="{TemplateBinding Padding}"
                                HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                Background="Transparent" BorderBrush="Transparent"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                WatermarkContent="{TemplateBinding DateTimeWatermarkContent}"
                                WatermarkTemplate="{TemplateBinding DateTimeWatermarkTemplate}"
								TextAlignment="{TemplateBinding TextAlignment}"
                                TabIndex="0"
                                SelectionOnFocus="SelectAll"
                                telerik:StyleManager.Theme="{StaticResource Theme}" />
                        
                        <Border x:Name="FocusVisual" Visibility="Collapsed" Grid.ColumnSpan="2" IsHitTestVisible="False" 
                                BorderBrush="{StaticResource ControlOuterBorder_Focused}" CornerRadius="{StaticResource SplitButton_SpanCornerRadius}" 
                                BorderThickness="{TemplateBinding BorderThickness}" >
                            <Border BorderBrush="{StaticResource ControlInnerBorder_Focused}" CornerRadius="{StaticResource SplitButton_SpanInnerCornerRadius}" 
                                    BorderThickness="{TemplateBinding BorderThickness}" />
                        </Border>

                        <telerik:RadDropDownButton Grid.Column="1" TabIndex="1" Margin="-1 0 0 0"
                                Padding="0" DropDownIndicatorVisibility="Collapsed" x:Name="DP"
                                PopupPlacementTarget="{Binding ElementName=PART_DateTimeInput}"
                                IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                CloseOnEnter="True"
                                IsTabStop="False"
                                HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                                telerikInput:DateTimePickerExtensions.FocusContentOnOpen="True"                                                
                                telerik:StyleManager.Theme="{StaticResource Theme}"
                        
                                Focusable="False"
                              >
                            
                            
                            <telerik:RadDropDownButton.DropDownContent>
                                <Grid>
                                  
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="*" />
                                    </Grid.ColumnDefinitions>

                                    <telerikInput:RadCalendar x:Name="PART_Calendar" Grid.Column="0"
                                            IsReadOnly="{TemplateBinding IsReadOnly}" 
                                            DateSelectionMode="{TemplateBinding DateSelectionMode}"
											Culture="{TemplateBinding Culture}"
                                            SelectionMode="Single"                                            
                                            Style="{TemplateBinding CalendarStyle}"
                                            DisplayDateStart="{TemplateBinding DisplayDateStart}"
                                            DisplayDateEnd="{TemplateBinding DisplayDateEnd}"
                                            SelectableDateStart="{TemplateBinding SelectableDateStart}"
                                            SelectableDateEnd="{TemplateBinding SelectableDateEnd}"                                                              
                                            DisplayDate="{Binding DisplayDate, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                            SelectedDate="{Binding SelectedDate, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                           telerik:StyleManager.Theme="{StaticResource Theme}" />

                                    <telerikInput:DateTimePickerClock x:Name="PART_Clock"
                                            Grid.Column="1" 
                                            ItemsSource="{TemplateBinding ClockItemsSource}"
											StartTime="{TemplateBinding StartTime}"
                                            EndTime="{TemplateBinding EndTime}"
                                            TimeInterval="{TemplateBinding TimeInterval}"
                                            IsReadOnly="{TemplateBinding IsReadOnly}"
                                            Style="{TemplateBinding ClockStyle}"
                                            SelectedTime="{Binding SelectedTime, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                            telerik:StyleManager.Theme="{StaticResource Theme}"/>
                                </Grid>
                            </telerik:RadDropDownButton.DropDownContent>

                            <telerik:RadDropDownButton.Template>
                                <ControlTemplate TargetType="telerik:RadDropDownButton">
                                    <Grid>
                                        <ContentPresenter Margin="{TemplateBinding Padding}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                                        <Popup x:Name="DropDownPopup"
							                
                                                AllowsTransparency="True" StaysOpen="False" Focusable="false" Placement="Bottom"
							                    IsOpen="{Binding Path=IsOpen, RelativeSource={RelativeSource TemplatedParent}}"
                                                >
                                            <ContentPresenter
										            x:Name="DropDownPopupContent"
										            Content="{TemplateBinding DropDownContent}"
										            ContentTemplate="{TemplateBinding DropDownContentTemplate}"
										            DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=DataContext}" />
                                        </Popup>
                                    </Grid>
                                </ControlTemplate>
                            </telerik:RadDropDownButton.Template>
                            <Grid>
                                <telerikChromes:ButtonChrome x:Name="ButtonChrome"
							            telerik:StyleManager.Theme="{StaticResource Theme}"
							            BorderBrush="{TemplateBinding BorderBrush}"
							            BorderThickness="{TemplateBinding BorderThickness}"
							            RenderEnabled="{TemplateBinding IsEnabled}"							           
							            RenderMouseOver="{Binding IsMouseOver, ElementName=PART_DropDownButton}"
							            CornerRadius="{StaticResource SplitButton_RightPartCornerRadius}"
                                      
                                        RenderActive="{TemplateBinding IsMouseOver}"
							            RenderFocused="{TemplateBinding IsKeyboardFocusWithin}"
                                       />

                                <ContentControl x:Name="CalendarPickerIcon" IsTabStop="False" Margin="4 0"
                                        Template="{StaticResource CalendarIcon}"
                                        Background="{StaticResource ButtonIconBackground_Normal}"
                                        Foreground="{StaticResource ButtonIconForeground_Normal}" />
                            </Grid>
                            
                        </telerik:RadDropDownButton>


                        <Popup x:Name="PART_InputPopup"
                                telerik:PopupExtensions.IsOpen="{Binding IsTooltipOpen, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                                telerik:PopupExtensions.Placement="Top"
                                telerik:PopupExtensions.PlacementTarget="{Binding ElementName=PART_DateTimeInput}"
                                telerik:PopupExtensions.Owner="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                             
                                StaysOpen="False"
                                AllowsTransparency="True"
                               >
                            <ContentPresenter Content="{TemplateBinding TooltipContent}"
                                    ContentTemplate="{TemplateBinding TooltipTemplate}" />
                        </Popup>                       
                    </Grid>

             
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="MouseOverVisual" Property="Opacity" Value="1" />
                            <Setter TargetName="MouseOverVisual" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="BorderBrush" TargetName="BackgroundVisual" Value="{StaticResource ControlOuterBorder_Disabled}" />
                            <Setter Property="Opacity" TargetName="MouseOverVisual" Value="0" />
                            <Setter Property="Visibility" TargetName="MouseOverVisual" Value="Collapsed" />
                            <Setter Property="Foreground" TargetName="PART_DateTimeInput" Value="{StaticResource PickerForeground_Disabled}" />                         
                        </Trigger>
                        <Trigger Property="IsKeyboardFocusWithin" Value="True">
                            <Setter TargetName="FocusVisual" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="InputMode" Value="DatePicker">
                            <Setter TargetName="PART_Clock" Property="Visibility" Value="Collapsed" />                   
                        </Trigger>
                        <Trigger Property="InputMode" Value="TimePicker">
                            <Setter TargetName="PART_Calendar" Property="Visibility"
                                    Value="Collapsed" />
                            
                        </Trigger>
                    </ControlTemplate.Triggers>
                           

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

	<!--telerikInput:RadDateTimePicker-->
    <Style TargetType="telerikInput:RadDateTimePicker"
            BasedOn="{StaticResource dateTimePickerStyle}"  />

</ResourceDictionary>
