<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Appointment" xml:space="preserve">
    <value>Termin</value>
  </data>
  <data name="AppointmentRecurrence" xml:space="preserve">
    <value>Termin Serie</value>
  </data>
  <data name="AppointmentTime" xml:space="preserve">
    <value>Termin Beginn</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Abbrechen</value>
  </data>
  <data name="CreateAppointment" xml:space="preserve">
    <value>Neuer Termin</value>
  </data>
  <data name="Daily" xml:space="preserve">
    <value>Täglich</value>
  </data>
  <data name="Days" xml:space="preserve">
    <value>Tage</value>
  </data>
  <data name="DeleteAppointment" xml:space="preserve">
    <value>Termin löschen</value>
  </data>
  <data name="DurationColon" xml:space="preserve">
    <value>Dauer</value>
  </data>
  <data name="Day" xml:space="preserve">
    <value>Tag</value>
  </data>
  <data name="EditAppointment" xml:space="preserve">
    <value>Termin bearbeiten</value>
  </data>
  <data name="EditRecurrenceRule" xml:space="preserve">
    <value>Serienmuster bearbeiten</value>
  </data>
  <data name="EndAfter" xml:space="preserve">
    <value>Endet nach:</value>
  </data>
  <data name="EndBy" xml:space="preserve">
    <value>Endet am:</value>
  </data>
  <data name="EndColon" xml:space="preserve">
    <value>Ende</value>
  </data>
  <data name="Event" xml:space="preserve">
    <value>Ereignis</value>
  </data>
  <data name="Every" xml:space="preserve">
    <value>Jede</value>
  </data>
  <data name="EveryDay" xml:space="preserve">
    <value>Tag</value>
  </data>
  <data name="EveryWeekday" xml:space="preserve">
    <value>Jeden Wochentag</value>
  </data>
  <data name="First" xml:space="preserve">
    <value>Ersten</value>
  </data>
  <data name="Fourth" xml:space="preserve">
    <value>Vierten</value>
  </data>
  <data name="Last" xml:space="preserve">
    <value>Letzter</value>
  </data>
  <data name="Monthly" xml:space="preserve">
    <value>Monatlich</value>
  </data>
  <data name="Months" xml:space="preserve">
    <value>Monate</value>
  </data>
  <data name="NoEndDate" xml:space="preserve">
    <value>Kein Enddatum</value>
  </data>
  <data name="Occurrences" xml:space="preserve">
    <value>Vorkommen</value>
  </data>
  <data name="Of" xml:space="preserve">
    <value>von</value>
  </data>
  <data name="OfEvery" xml:space="preserve">
    <value>von jedem</value>
  </data>
  <data name="Ok" xml:space="preserve">
    <value>Ok</value>
  </data>
  <data name="RangeOfRecurrence" xml:space="preserve">
    <value>Seriendauer</value>
  </data>
  <data name="RecurrencePattern" xml:space="preserve">
    <value>Serienmuster</value>
  </data>
  <data name="RemoveRecurrence" xml:space="preserve">
    <value>Lösche Serie</value>
  </data>
  <data name="RecurEvery" xml:space="preserve">
    <value>Jede</value>
  </data>
  <data name="SaveAppointment" xml:space="preserve">
    <value>Speichere Termin</value>
  </data>
  <data name="SaveRecurrence" xml:space="preserve">
    <value>Speichere Serienmuster</value>
  </data>
  <data name="Second" xml:space="preserve">
    <value>Zweiten</value>
  </data>
  <data name="Start" xml:space="preserve">
    <value>Start:</value>
  </data>
  <data name="StartColon" xml:space="preserve">
    <value>Start</value>
  </data>
  <data name="Third" xml:space="preserve">
    <value>Dritten</value>
  </data>
  <data name="The" xml:space="preserve">
    <value>Der</value>
  </data>
  <data name="Untitled" xml:space="preserve">
    <value>Unbenannt</value>
  </data>
  <data name="WeekDays" xml:space="preserve">
    <value>Wochentage</value>
  </data>
  <data name="WeekendDays" xml:space="preserve">
    <value>Wochenendtage</value>
  </data>
  <data name="Weekly" xml:space="preserve">
    <value>Wöchentlich</value>
  </data>
  <data name="WeeksOn" xml:space="preserve">
    <value>Woche(n) am:</value>
  </data>
  <data name="Yearly" xml:space="preserve">
    <value>Jährlich</value>
  </data>
  <data name="AllDayEvent" xml:space="preserve">
    <value>Ganztägiges Ereignis</value>
  </data>
  <data name="EditRecurrence" xml:space="preserve">
    <value>Serie bearbeiten</value>
  </data>
  <data name="EditRecurrenceCommandText" xml:space="preserve">
    <value>Serientyp bearbeiten</value>
  </data>
  <data name="EndTime" xml:space="preserve">
    <value>Endet um:</value>
  </data>
  <data name="SaveAndClose" xml:space="preserve">
    <value>Speichern und schließen</value>
  </data>
  <data name="SaveAndCloseCommandText" xml:space="preserve">
    <value>Speichern &amp; Schließen</value>
  </data>
  <data name="StartTime" xml:space="preserve">
    <value>Beginnt um:</value>
  </data>
  <data name="Subject" xml:space="preserve">
    <value>Betreff</value>
  </data>
  <data name="OpenRecurringItem" xml:space="preserve">
    <value>Öffne Serienelement</value>
  </data>
  <data name="OpenOccurrence" xml:space="preserve">
    <value>Öffne dieses Vorkommen</value>
  </data>
  <data name="OpenSeries" xml:space="preserve">
    <value>Öffne die Serie</value>
  </data>
  <data name="OpenRecurringItemQuestion" xml:space="preserve">
    <value>"{0}" ist ein Serienelement. Wollen Sie nur dieses Element oder die Serie öffnen?</value>
  </data>
  <data name="EditParentAppointment" xml:space="preserve">
    <value>Übergeordneten Termin bearbeiten</value>
  </data>
  <data name="Body" xml:space="preserve">
    <value>Beschreibungstext</value>
  </data>
  <data name="SetDayViewMode" xml:space="preserve">
    <value>Tagesansicht </value>
  </data>
  <data name="SetMonthViewMode" xml:space="preserve">
    <value>Monatsansicht</value>
  </data>
  <data name="SetWeekViewMode" xml:space="preserve">
    <value>Wochenansicht</value>
  </data>
  <data name="EndDateBeforeStart" xml:space="preserve">
    <value>Das von Ihnen eingegebene Ende liegt vor dem Beginn.</value>
  </data>
  <data name="Month" xml:space="preserve">
    <value>Monat</value>
  </data>
  <data name="Week" xml:space="preserve">
    <value>Woche</value>
  </data>
  <data name="InvalidRecurrenceRuleMessage" xml:space="preserve">
    <value>Das Serienmuster ist ungültig.</value>
  </data>
  <data name="InvalidRecurrenceRuleTitle" xml:space="preserve">
    <value>Ungültiges Muster</value>
  </data>
  <data name="DurationDay" xml:space="preserve">
    <value>Tag</value>
  </data>
  <data name="DeleteOccurrence" xml:space="preserve">
    <value>Dieses Serienelement löschen</value>
  </data>
  <data name="DurationDays" xml:space="preserve">
    <value>Tage</value>
  </data>
  <data name="DurationHour" xml:space="preserve">
    <value>Stunde</value>
  </data>
  <data name="DurationHours" xml:space="preserve">
    <value>Stunden</value>
  </data>
  <data name="DurationMinute" xml:space="preserve">
    <value>Minute</value>
  </data>
  <data name="DurationMinutes" xml:space="preserve">
    <value>Minuten</value>
  </data>
  <data name="DeleteSeries" xml:space="preserve">
    <value>Lösche die Serie</value>
  </data>
  <data name="DeleteRecurringItem" xml:space="preserve">
    <value>Serie löschen</value>
  </data>
  <data name="DeleteRecurringItemQuestion" xml:space="preserve">
    <value>"{0}" ist ein Serienelement. Wollen Sie nur dieses Element oder die Serie löschen?</value>
  </data>
  <data name="DurationWeek" xml:space="preserve">
    <value>Woche</value>
  </data>
  <data name="DurationWeeks" xml:space="preserve">
    <value>Wochen</value>
  </data>
  <data name="DeleteItem" xml:space="preserve">
    <value>Element löschen</value>
  </data>
  <data name="DeleteItemQuestion" xml:space="preserve">
    <value>Sind Sie sicher, dass Sie dieses Element löschen möchten?</value>
  </data>
  <data name="Restore" xml:space="preserve">
    <value>restore</value>
  </data>
  <data name="Timeline" xml:space="preserve">
    <value>Zeitlinie</value>
  </data>
  <data name="Categorize" xml:space="preserve">
    <value>Kategorisieren</value>
  </data>
  <data name="ShowAs" xml:space="preserve">
    <value>Als show</value>
  </data>
  <data name="Auto_hide" xml:space="preserve">
    <value>Automatisch im Hintergrund</value>
  </data>
  <data name="Dockable" xml:space="preserve">
    <value>Andockbar</value>
  </data>
  <data name="Floating" xml:space="preserve">
    <value>Verschiebbar</value>
  </data>
  <data name="Hide" xml:space="preserve">
    <value>Verstecken</value>
  </data>
  <data name="Tabbed_document" xml:space="preserve">
    <value>Registernavigation</value>
  </data>
  <data name="Busy" xml:space="preserve">
    <value>Beschäftigt</value>
  </data>
  <data name="Free" xml:space="preserve">
    <value>Frei</value>
  </data>
  <data name="OutOfOffice" xml:space="preserve">
    <value>Ich bin nicht im Büro</value>
  </data>
  <data name="Tentative" xml:space="preserve">
    <value>Vorläufige</value>
  </data>
  <data name="RadDataPagerEllipsisString" xml:space="preserve">
    <value>...</value>
  </data>
  <data name="HighImportance" xml:space="preserve">
    <value>Hoher Stellenwert</value>
  </data>
  <data name="LowImportance" xml:space="preserve">
    <value>Geringe Bedeutung</value>
  </data>
  <data name="ResourceEditingMessage" xml:space="preserve">
    <value>Sie können nur die Ressourcen durch die Eröffnung der Reihe</value>
  </data>
  <data name="Clear" xml:space="preserve">
    <value>Klären</value>
  </data>
  <data name="ClearAll" xml:space="preserve">
    <value>Gesamtlöschtaste</value>
  </data>
  <data name="GridViewClearFilter" xml:space="preserve">
    <value>Filter leeren</value>
  </data>
  <data name="GridViewFilter" xml:space="preserve">
    <value>Filtern</value>
  </data>
  <data name="GridViewFilterAnd" xml:space="preserve">
    <value>Und</value>
  </data>
  <data name="GridViewFilterContains" xml:space="preserve">
    <value>Enthält</value>
  </data>
  <data name="GridViewFilterEndsWith" xml:space="preserve">
    <value>Endet mit</value>
  </data>
  <data name="GridViewFilterIsContainedIn" xml:space="preserve">
    <value>Enhalten</value>
  </data>
  <data name="GridViewFilterIsEqualTo" xml:space="preserve">
    <value>Gleich</value>
  </data>
  <data name="GridViewFilterIsGreaterThan" xml:space="preserve">
    <value>Größer als</value>
  </data>
  <data name="GridViewFilterIsGreaterThanOrEqualTo" xml:space="preserve">
    <value>Größer oder gleich</value>
  </data>
  <data name="GridViewFilterIsLessThan" xml:space="preserve">
    <value>Kleiner als</value>
  </data>
  <data name="GridViewFilterIsLessThanOrEqualTo" xml:space="preserve">
    <value>Kleiner oder gleich</value>
  </data>
  <data name="GridViewFilterIsNotEqualTo" xml:space="preserve">
    <value>Ist nicht gleich</value>
  </data>
  <data name="GridViewFilterMatchCase" xml:space="preserve">
    <value>Groß-/Kleinschreibung beachten</value>
  </data>
  <data name="GridViewFilterSelectAll" xml:space="preserve">
    <value>Alles auswählen</value>
  </data>
  <data name="GridViewFilterShowRowsWithValueThat" xml:space="preserve">
    <value>Zeilen mit dem Wert</value>
  </data>
  <data name="GridViewFilterStartsWith" xml:space="preserve">
    <value>Beginnt mit</value>
  </data>
  <data name="GridViewGroupPanelText" xml:space="preserve">
    <value>Ziehen Sie einen Spaltenkopf auf diese Fläche, um nach dieser Spalte zu gruppieren.</value>
  </data>
  <data name="GridViewGroupPanelTopText" xml:space="preserve">
    <value>Gruppenkopf</value>
  </data>
  <data name="GridViewGroupPanelTopTextGrouped" xml:space="preserve">
    <value>Gruppiert nach:</value>
  </data>
  <data name="FilterAnd" xml:space="preserve">
    <value>Und</value>
  </data>
  <data name="FilterEndsWith" xml:space="preserve">
    <value>Endet mit</value>
  </data>
  <data name="FilterIsContainedIn" xml:space="preserve">
    <value>Enhalten</value>
  </data>
  <data name="FilterIsEqualTo" xml:space="preserve">
    <value>Gleich</value>
  </data>
  <data name="FilterIsGreaterThan" xml:space="preserve">
    <value>Größer als</value>
  </data>
  <data name="FilterIsGreaterThanOrEqualTo" xml:space="preserve">
    <value>Größer oder gleich</value>
  </data>
  <data name="FilterIsLessThan" xml:space="preserve">
    <value>Kleiner als</value>
  </data>
  <data name="FilterIsLessThanOrEqualTo" xml:space="preserve">
    <value>Kleiner oder gleich</value>
  </data>
  <data name="FilterIsNotEqualTo" xml:space="preserve">
    <value>Ist nicht gleich</value>
  </data>
  <data name="FilterMatchCase" xml:space="preserve">
    <value>Groß-/Kleinschreibung beachten</value>
  </data>
  <data name="FilterOr" xml:space="preserve">
    <value>Oder</value>
  </data>
  <data name="FilterStartsWith" xml:space="preserve">
    <value>Beginnt mit</value>
  </data>
  <data name="GridViewFilterOr" xml:space="preserve">
    <value>Oder</value>
  </data>
  <data name="FilterContains" xml:space="preserve">
    <value>Enthält</value>
  </data>
</root>